package Hardware
public
  WITH AFDX;
  WITH AFDX_Properties;
  WITH dataType;
  with ARINC653;
  with ID_Properties;

------------------------------------------------------------------
--- 1. HW_Platform
------------------------------------------------------------------
  SYSTEM HW_Platform
  END HW_Platform;
  
  SYSTEM IMPLEMENTATION HW_Platform.i
    SUBCOMPONENTS
      CPM_1 : SYSTEM Module.i; -- Processor or System
      CPM_2 : SYSTEM Module.i; -- Processor or System
      CPM_3 : SYSTEM Module.i; -- Processor or System
     
      WIRE_1 : BUS AFDX::Wire; -- Bus
      WIRE_2 : BUS AFDX::Wire; -- Bus
      WIRE_3 : BUS AFDX::Wire; -- Bus
      WIRE_4 : BUS AFDX::Wire; -- Bus
      WIRE_5 : BUS AFDX::Wire; -- Bus
    
      SW_1 : DEVICE AFDXSwitch_4p; -- Device or System
      SW_2 : DEVICE AFDXSwitch_4p; -- Device or System
     
      sensor_rdc: device RDC; -- RDC
    CONNECTIONS
      WIRE_1_CPM_1: BUS ACCESS WIRE_1->CPM_1.afdx;
      WIRE_1_SW_1:  BUS ACCESS WIRE_1->SW_1.afdx_p1;
      WIRE_3_SW_1:  BUS ACCESS WIRE_3->SW_1.afdx_p3;
      WIRE_1_CPM_2: BUS ACCESS WIRE_3->CPM_2.afdx;
      WIRE_2_SW_1:  BUS ACCESS WIRE_2->SW_1.afdx_p4;
      WIRE_2_SW_2:  BUS ACCESS WIRE_2->SW_2.afdx_p1;
      WIRE_4_SW_2:  BUS ACCESS WIRE_4->SW_2.afdx_p4;
      WIRE_4_CPM_3: BUS ACCESS WIRE_4->CPM_3.afdx;
      WIRE_5_RDC: BUS ACCESS WIRE_5->sensor_rdc.afdx;
      
      WIRE_5_SW_1:  BUS ACCESS WIRE_5->SW_1.afdx_p2;
  END HW_Platform.i;  
 
 
------------------------------------------------------------------
--- 1.1 Module
------------------------------------------------------------------
  SYSTEM Module
    FEATURES
      afdx : REQUIRES BUS ACCESS AFDX::Wire;
  END Module;

  SYSTEM IMPLEMENTATION Module.i
    SUBCOMPONENTS
      --CPU : PROCESSOR CPU_with_PCI;
      --modified for resolute validation
      CPU : PROCESSOR CPU_with_PCI.i;
      AFDX_ES : DEVICE AFDX_Card;
      PCI_BUS : BUS;
    CONNECTIONS
      CPU_PCI: BUS ACCESS PCI_BUS->CPU.pci;
      AFDX_ES_PCI: BUS ACCESS PCI_BUS->AFDX_ES.pci;
      AFDX_EXT: BUS ACCESS AFDX_ES.afdx->afdx;
  END Module.i;
  

------------------------------------------------------------------
--- 1.2 CPU_with_PCI
------------------------------------------------------------------
  PROCESSOR CPU_with_PCI
    FEATURES
      pci : REQUIRES BUS ACCESS;
    properties
      Scheduling_Protocol => (POSIX_1003_HIGHEST_PRIORITY_FIRST_PROTOCOL);
     
      
  END CPU_with_PCI;
  
  
------------------------------------------------------------------
--- 1.2.1 CPU_with_PCI Processor implementation (added for resolute validation)
------------------------------------------------------------------
  processor implementation CPU_with_PCI.i
  subcomponents
    partition_P1 : virtual processor;
    partition_P2 : virtual processor;
    partition_P3 : virtual processor;
    partition_P4 : virtual processor;
  properties
    ARINC653::Module_Major_Frame => 100ms;

    ARINC653::Module_Schedule => (
    [Partition => reference (partition_P1);
    Duration  => 25 ms;
    Periodic_Processing_Start => true;],
    [Partition => reference (partition_P2);
    Duration  => 25 ms;
    Periodic_Processing_Start => true;],
    [Partition => reference (partition_P3);
    Duration  => 25 ms;
    Periodic_Processing_Start => true;],
    [Partition => reference (partition_P4);
    Duration  => 25 ms;
    Periodic_Processing_Start => true;]
    );
     ARINC653::HM_Error_ID_Levels =>
           ([ErrorIdentifier => 1; Description => "Deadline Missed"; ErrorLevel => Process_Level ; ErrorCode => Deadline_Miss;],
     	    [ErrorIdentifier => 2; Description => "Application Error"           ; ErrorLevel => Process_Level ; ErrorCode => Application_Error;],
     	    [ErrorIdentifier => 3; Description => "Numeric Error"               ; ErrorLevel => Process_Level ; ErrorCode => Numeric_Error;],
     	    [ErrorIdentifier => 4; Description => "Illegal Request"             ; ErrorLevel => Process_Level ; ErrorCode => Illegal_Request;],
     	    [ErrorIdentifier => 5; Description => "Stack Overflow"              ; ErrorLevel => Process_Level ; ErrorCode => Stack_Overflow;],
     	    [ErrorIdentifier => 6; Description => "Memory Violation"            ; ErrorLevel => Process_Level ; ErrorCode => Memory_Violation;],
     	    [ErrorIdentifier => 7; Description => "Hardware Fault"              ; ErrorLevel => Process_Level ; ErrorCode => Hardware_Fault;],
     	    [ErrorIdentifier => 8; Description => "Power Failure"               ; ErrorLevel => Process_Level ; ErrorCode => Power_Fail;]);

    ARINC653::HM_Error_ID_Actions =>
           ([ErrorIdentifier => 1 ; Description => "Ignore the error"; Action => "ignore";],
            [ErrorIdentifier => 2 ; Description => "Ignore the error"; Action => "ignore";],
            [ErrorIdentifier => 3 ; Description => "Ignore the error"; Action => "ignore";],
            [ErrorIdentifier => 4 ; Description => "Ignore the error"; Action => "ignore";],
            [ErrorIdentifier => 5 ; Description => "Ignore the error"; Action => "ignore";],
            [ErrorIdentifier => 6 ; Description => "Ignore the error"; Action => "ignore";],
            [ErrorIdentifier => 7 ; Description => "Ignore the error"; Action => "ignore";],
            [ErrorIdentifier => 8 ; Description => "Ignore the error"; Action => "ignore";]);
  end CPU_with_PCI.i;
  
  
------------------------------------------------------------------
-- 1.3 AFDX_Card
------------------------------------------------------------------
  DEVICE AFDX_Card EXTENDS AFDX::End_System
    FEATURES
      pci  : REQUIRES BUS ACCESS;
    PROPERTIES
      AFDX_Properties::Supported_Port_Speeds => (100 MBytesps);
  END AFDX_Card;
  
------------------------------------------------------------------
--- 1.4 AFDXSwitch - An implementation with 4 port 
------------------------------------------------------------------
  DEVICE AFDXSwitch_4p EXTENDS AFDX::Switch
	FEATURES
		afdx_p1 : REQUIRES BUS ACCESS AFDX::Wire;
		afdx_p2 : REQUIRES BUS ACCESS AFDX::Wire;
		afdx_p3 : REQUIRES BUS ACCESS AFDX::Wire;
		afdx_p4 : REQUIRES BUS ACCESS AFDX::Wire;
    PROPERTIES
      AFDX_Properties::Supported_Port_Speeds => (10 MBytesps,100 MBytesps);
      ID_Properties::deviceType => Switch;
  END AFDXSwitch_4p;
  
  device RDC
		features
			pressure: out event data port dataType::pressure;
			afdx: requires bus access AFDX::Wire;
	end RDC;   
end Hardware;